// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// PS_cal_cpp
Rcpp::NumericMatrix PS_cal_cpp(Rcpp::NumericVector data, Rcpp::NumericVector period_t, double damping, double time_dt, int type_return);
RcppExport SEXP _RCTC_PS_cal_cpp(SEXP dataSEXP, SEXP period_tSEXP, SEXP dampingSEXP, SEXP time_dtSEXP, SEXP type_returnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type period_t(period_tSEXP);
    Rcpp::traits::input_parameter< double >::type damping(dampingSEXP);
    Rcpp::traits::input_parameter< double >::type time_dt(time_dtSEXP);
    Rcpp::traits::input_parameter< int >::type type_return(type_returnSEXP);
    rcpp_result_gen = Rcpp::wrap(PS_cal_cpp(data, period_t, damping, time_dt, type_return));
    return rcpp_result_gen;
END_RCPP
}
// subset_select
Rcpp::NumericMatrix subset_select(Rcpp::NumericVector data1, Rcpp::NumericVector data2, double fraction, int length, double time_dt, int type_return);
RcppExport SEXP _RCTC_subset_select(SEXP data1SEXP, SEXP data2SEXP, SEXP fractionSEXP, SEXP lengthSEXP, SEXP time_dtSEXP, SEXP type_returnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type data1(data1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type data2(data2SEXP);
    Rcpp::traits::input_parameter< double >::type fraction(fractionSEXP);
    Rcpp::traits::input_parameter< int >::type length(lengthSEXP);
    Rcpp::traits::input_parameter< double >::type time_dt(time_dtSEXP);
    Rcpp::traits::input_parameter< int >::type type_return(type_returnSEXP);
    rcpp_result_gen = Rcpp::wrap(subset_select(data1, data2, fraction, length, time_dt, type_return));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RCTC_PS_cal_cpp", (DL_FUNC) &_RCTC_PS_cal_cpp, 5},
    {"_RCTC_subset_select", (DL_FUNC) &_RCTC_subset_select, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_RCTC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
